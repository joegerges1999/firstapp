- hosts: 127.0.0.1
  connection: local
  vars:
    sonar_version: "{{ sonar_version }}"
    regex_pattern: "{{ regex_patern }}"

  tasks:  
  - name: tearing down the sonarqube services
    docker_container:
      name: sonarqube
      state: absent 
  
  - name: making sure the postgresql container is active for backup
    docker_container:
      name: sonardb
      state: started 
      image: postgres

  - name: backing up the sonar extensions
    copy:
      src: /data/docker/volumes/sonarqube_extensions
      dest: /data/jgerges/backups/sonarqube_extensions_backup
      backup: yes
    delegate_to: 127.0.0.1

  - name: creating postgresql data dump
    shell: docker exec sonar_postgres pg_dump -U sonar sonar > /data/jgerges/backups/sonar.sql
    delegate_to: 127.0.0.1

  - name: find unsupported plugins
    find:
      paths: /data/docker/volumes/sonarqube_extensions/_data/plugins
      patterns: '{{ regex_patern }}'
      use_regex: yes
    register: plugins_to_delete
   
  - name: delete files
    file:
      path: "{{ item.path }}"
      state: absent
    with_items: "{{ plugins_to_delete.files }}"
   
  - name: granting permissions for volumes
    file:
      path: /data/docker/volumes/
      state: directory
      mode: '777'
      recurse: yes
  
  - name: waking the services up
    environment:
      SONAR_IMAGE: sonarqube:{{ sonar_version }}
    docker_compose:
      project_src: .
 
  - name: waiting for sonarqube service to become available
    uri:
      url: http://localhost:9000/sonar/setup
      status_code: 200
    register: result
    until: result.status == 200
    retries: 30
    delay: 5

  - name: upgrading database
    uri:
      url: http://jgerges/sonar/api/system/migrate_db
      method: POST
